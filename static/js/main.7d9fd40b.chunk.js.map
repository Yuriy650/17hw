{"version":3,"sources":["CurrentTime/CurrentTime.js","Button/Button.js","ButtonPeriod/ButtonPeriod.js","Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentTime","props","console","log","className","time","Button","type","value","onClick","onclick","button","ButtonPeriod","width","buttonPeriod","Timer","startTimer","interval","step","part","onTimeStart","timerID","setInterval","state","setState","line","onTimeEnd","stopTimer","e","target","componentWillUnmount","onTimePause","checkTimer","startTimerPeriod","timerPeriodID","timePeriod","stopTimerPeriod","autoStart","checkTimerPeriod","anotherStep","bind","this","clearInterval","style","onTick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d9fd40b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CurrentTime.css';\r\n\r\nfunction CurrentTime (props) {\r\n    return (\r\n        <div>\r\n            {console.log({props})}\r\n            <p className=\"show-timer\">00:{props.time}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentTime;","import React from 'react';\r\nimport './Button.css'\r\nfunction Button(props) {\r\n    return (\r\n        <div>\r\n            <button className=\"start\" type=\"button\" value={props.value}\r\n                    onClick={props.onclick}>{props.button}\r\n            </button>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './ButtonPeriod.css';\r\n\r\nfunction ButtonPeriod(props) {\r\n    return (\r\n        <div>\r\n            <button className=\"start\" type=\"button\" value={props.value} onClick={props.onclick}>{props.buttonPeriod}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ButtonPeriod;","import React, {Component} from 'react';\r\nimport CurrentTime from \"../CurrentTime/CurrentTime\";\r\nimport Button from \"../Button/Button\";\r\nimport ButtonPeriod from \"../ButtonPeriod/ButtonPeriod\";\r\nimport './Timer.css'\r\n\r\nconst START = 10;\r\nconst PERIOD = 20;\r\nlet width;\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: START,\r\n            timePeriod: PERIOD,\r\n            button: 'Start',\r\n            buttonPeriod: 'Start',\r\n            autoStart: false,\r\n            line: 100,\r\n        }\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.stopTimer = this.stopTimer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.autoStart === true) {\r\n            setInterval(\r\n                () => this.startTimer(),\r\n                1000\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        clearInterval(this.timerPeriodID);\r\n    }\r\n\r\n    startTimer = (interval, step, part) => {\r\n        this.props.onTimeStart();\r\n        this.timerID = setInterval(() => {\r\n            if (this.state.time === 0) {\r\n                this.setState({time: START, line: 100});\r\n                this.props.onTimeEnd();\r\n            } else {\r\n                this.setState({time: this.state.time - step, button: 'Stop', line: this.state.line - part});\r\n            }\r\n        }, interval);\r\n    }\r\n    stopTimer = (e) => {\r\n        //console.log(e.target.value);\r\n        this.setState({time: e.target.value, button: 'Start', line: this.state.line});\r\n        this.componentWillUnmount();\r\n        this.props.onTimePause();\r\n    }\r\n\r\n    checkTimer = (e) => {\r\n        this.state.button === 'Start' ? this.startTimer(this.props.step, 1, 10) : this.stopTimer(e)\r\n    }\r\n    startTimerPeriod = (interval, step) => {\r\n        this.timerPeriodID = setInterval(() => {\r\n            if (this.state.timePeriod === 0) {\r\n                this.setState({timePeriod: PERIOD});\r\n            } else {\r\n                this.setState({timePeriod: this.state.timePeriod - step, buttonPeriod: 'Stop'})\r\n            }\r\n        }, interval);\r\n    }\r\n    stopTimerPeriod = (e) => {\r\n        this.setState({timePeriod: e.target.value, buttonPeriod: 'Start', autoStart: false,});\r\n        this.componentWillUnmount();\r\n    }\r\n    checkTimerPeriod = (e) => {\r\n        this.state.buttonPeriod === 'Start' ? this.startTimerPeriod(this.props.anotherStep, 2) : this.stopTimerPeriod(e)\r\n    }\r\n\r\n    render() {\r\n        width = {width: this.state.line + '%'};\r\n        return (\r\n            <div>\r\n                <CurrentTime time={this.state.time}/>\r\n                <Button value={this.state.time} onclick={this.checkTimer} button={this.state.button}/>\r\n                <p className=\"line\" style={width}/>\r\n                <div\r\n                    className=\"some-text\">Залишилось: {this.state.time === 0 ? this.props.onTimeEnd() : this.props.onTick(this.state.time)}</div>\r\n                <CurrentTime time={this.state.timePeriod}/>\r\n                <ButtonPeriod value={this.state.timePeriod} onclick={this.checkTimerPeriod}\r\n                              buttonPeriod={this.state.buttonPeriod}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport Timer from './Timer/Timer';\n\nfunction App() {\n    const SECOND = 1000;\n    const SOMETIME = 2000;\n\n    return (\n        <div className=\"App\">\n            <Timer\n                step={SECOND}\n                anotherStep={SOMETIME}\n                onTick={(time) => {\n                    console.log(\"Залишилось часу: \" + time)\n                    return time\n                }}\n                onTimeStart={() => console.log(\"Таймер запущено!\")}\n                onTimeEnd={() => {\n                    console.log(\"Час вийшов!\")\n                    return \"Час вийшов!\"\n                }}\n                onTimePause={() => console.log(\"Таймер на паузі!\")}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}